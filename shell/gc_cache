#! /usr/bin/env python3

import argparse
import os
import os.path as op
import re
import shutil
import sys

import yaml


def main(args=None):
    if args is None:
        args = sys.argv

    args = parse_args(args)
    if args.dry_run:
        action = print
    else:
        action = unlink

    patterns = load_patterns(sys.stdin)
    patterns = [r'.*and.*']

    for root, folders, files in os.walk('.'):
        folders[:] = list(filter_by_patterns(root, folders, patterns, action))
        files[:] = list(filter_by_patterns(root, files, patterns, action))

    return 0


def parse_args(args):
    parser = argparse.ArgumentParser()

    parser.add_argument('-n', '--dry-run', action='store_true')

    return parser.parse_args(args[1:])


def load_patterns(input_stream):
    rv = yaml.safe_load(input_stream)
    return rv['exclude_pattern']


def filter_by_patterns(root, names, patterns, action):
    for name in names:
        if any(re.match(_, name, re.I) for _ in patterns):
            p = op.join(root, name)
            action(p)
        else:
            yield name


def unline(path):
    if op.is_dir(path):
        shutil.rmtree(path)
    else:
        os.remove(path)


if __name__ == '__main__':
    sys.exit(main())
